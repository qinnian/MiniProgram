const http = require('http');
const https = require('https');
function request(url, options={}) {
    var engine = options.engine || 'default';
    return new Promise(function (resolve, reject) {
        if (engine == 'default') {
            if (/^http:\/\//.test(url)) {
                http.get(url, (res) => {
                    if (res.statusCode != 200) {
                        return reject('Request Failed, statusCode:' + res.statusCode);
                    }
                    res.setEncoding('utf8');
                    let rawData = '';
                    res.on('data', (chunk) => { rawData += chunk; });
                    res.on('end', () => {
                        return resolve(rawData);
                    });
                }).on('error', (e) => {
                    return reject('Get Error, message:' + e.message);
                });
            } else {
                https.get(url, (res) => {
                    if (res.statusCode != 200) {
                        return reject('Request Failed, statusCode:' + res.statusCode);
                    }
                    res.setEncoding('utf8');
                    let rawData = '';
                    res.on('data', (chunk) => { rawData += chunk; });
                    res.on('end', () => {
                        return resolve(rawData);
                    });
                }).on('error', (e) => {
                    return reject('Get Error, message:' + e.message);
                });
            }
        } else if(engine=='puppeteer'){
            puppeteer(url).then(res=>{
                resolve(res);
            }).catch(err=>{
                reject(err);
            })
        } else if(engine=='phantom'){
            phantom(url).then(res=>{
                resolve(res);
            }).catch(err=>{
                reject(err);
            })
        } else reject('no engine named '+engine);
    })
}
async function puppeteer(url) {
    //npm install puppeteer
    const puppeteer = require('puppeteer');
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    await page.goto(url,{waitUntil:"networkidle0"});
    var content = await page.content();
    await browser.close();
    return content;
}
async function phantom(url) {
    //npm install phantom
    const phantom = require('phantom');
    const instance = await phantom.create();
    const page = await instance.createPage();
    await page.open(url);
    var content = await page.property('content');
    await instance.exit();
    return content;
}
module.exports = request;