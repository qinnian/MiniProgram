const request = require('./lib/Request.js');
const parser = require('./lib/Parser.js');
const marked = require('./lib/marked.js');
const styleList = require('./lib/StylesList.js');
const fs = require('fs');
const path = require('path');
async function main(data, mode = "html", options = {}) {
    options.autohighlight = options.hasOwnProperty("autohighlight") ? options.autohighlight : true;
    data = data || '';
    try {
        var html;
        //文件模式
        if (mode == "file") {
            if (path.extname(data) != '.html' && path.extname(data) != '.md') throw ('Unsupported file type ' + path.extname(data));
            mode = path.extname(data).substring(1);
            try {
                data = '' + fs.readFileSync(data);
            } catch (e) {
                throw ('Failed to open file ' + data);
            }
        }
        //html模式
        if (mode == "html")
            html = data;
        //网址模式
        else if (mode == "website") {
            if (/^https*:\/\//.test(data)) {
                options.domain = data.match(/^https*:\/\/[^\/]*/)[0];
                html = await request(data, options);
            }
            else throw ('invalid url');
        }
        //markdown模式
        else if (mode == "md" || mode == "markdown") {
            options.tagStyle = options.tagStyle || {};
            if (!options.tagStyle.td) {
                options.tagStyle.th = 'border:1px solid #ccc;padding: 6px 13px';
                options.tagStyle.td = 'border:1px solid #ccc;padding: 6px 13px';
            }
            html = marked(data);
        }
        //加载代码高亮css
        if (options.autohighlight && /pre/.test(html)) {
            if (!options.styles || !styleList[options.styles.toLowerCase()]) options.styles = 'default';
            var styles = fs.readFileSync(path.join(__dirname, ('/lib/highlight.js/styles/' + options.styles.toLowerCase() + '.css')), 'utf8');
            html = '<style>' + styles + '</style>' + html;
        }
        return await parser(html, options);
    } catch (e) {
        throw e;
    }
}
module.exports = main;